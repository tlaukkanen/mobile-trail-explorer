/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.substanceofcode.tracker.grid;

/**
 * every implementation should have a constructor, which accepts a GridPosition as an
 * argument. using getAsWSG84Position() it can convert the data to its own grid.
 *
 * @author kaspar
 */
public abstract class GridPosition implements GridNames
{

    /**
     * returns the position as a instance of WSG84Position (used for convert positions)
     * @return
     */
    public abstract WSG84Position getAsWSG84Position();
    
    /**
     * returns the same name as in GridFormatter
     * @return
     */
    public abstract String getName();
    
    /**
     * clones the receiver
     * @return
     */
    public abstract GridPosition clone();
    
    /**
     * serialize the GridPosition, without using | and \
     * format: <GridName>|<version>|<data1>|...
     * @return
     */
    public abstract String[] serialize();
    
    /**
     * unserialze the data generated by serialize. throws exception if data is not suitable
     * @param data
     * @return
     * @throws java.lang.Exception
     */
    public abstract GridPosition unserialize(String[] data) throws Exception;
    
    
    
    
    
    //* static methods: no more methods to implement
    

    
    /**
     * unserialize the data of any subclass
     * @param data
     * @return
     */
    public static GridPosition unserializeGridPosition(String[] data)
    {
        for(int i=0 ; i<gridPositions.length ; i++)
        {
            try
            {
                return gridPositions[i].unserialize(data);
            } catch (Exception e) {
                
}
        }
        return null;
    }

}
